

print("==== Tests de comparaison ====")
a = 5
b = 10
c = 5
print("a =", a, "b =", b, "c =", c)

print("a == c:", a == c)  # True
print("a != b:", a != b)  # True
print("a < b:", a < b)    # True
print("a > b:", a > b)    # False
print("a <= c:", a <= c)  # True
print("b >= a:", b >= a)  # True

print("==== Tests d'expressions complexes ====")
print("(a < b) and (c == a):", (a < b) and (c == a))  # True
print("(a > b) or (c == a):", (a > b) or (c == a))    # True
print("not (a == b):", not (a == b))                  # True
print("not (a < b) or not (c == a):", not (a < b) or not (c == a))  # False

print("==== Tests d'imbrication ====")
if (a < b):
    if (a == c):
        print("Imbrication correcte: a < b et a == c")
    else:
        print("Erreur d'imbrication: a < b mais a != c")
else:
    if (a == c):
        print("Erreur d'imbrication: a >= b mais a == c")
    else:
        print("Erreur d'imbrication: a >= b et a != c")


print("==== Tests avec valeurs numériques dans conditions ====")
x = 1
y = 0
if x:
    print("x est considéré comme vrai")
else:
    print("x est considéré comme faux")

if y:
    print("y est considéré comme vrai")
else:
    print("y est considéré comme faux")

# Test des expressions conditionnelles, opérateurs booléens et comparaisons
print("==== Tests des valeurs booléennes ====")
print("True:", True)
print("False:", False)
print("not True:", not True)
print("not False:", not False)
print("==== Tests des opérateurs AND et OR ====")
print("True and True:", True and True)
print("True and False:", True and False)
print("False and True:", False and True)
print("False and False:", False and False)
print("True or True:", True or True)
print("True or False:", True or False)
print("False or True:", False or True)
print("False or False:", False or False)

print("==== Tests de court-circuit ====")
d = 0
# Test de court-circuit OR
if True or d//0:  # Le d//0 ne devrait pas être évalué (division par zéro)
    print("OR court-circuit fonctionne")

# Test de court-circuit AND
if False and d//0:  # Le d//0 ne devrait pas être évalué (division par zéro)
    print("AND court-circuit ne devrait pas s'afficher")
print("AND court-circuit fonctionne")

print("==== Tests des conventions  ====")
L = [1]
str = ""
Liste_Vide = []
if Liste_Vide :
    print("Liste Vide != False")
else:
    print("Liste Vide == False")
if not str:
    print("String Vide != False")
else:
    print("String Vide == False")
if L:
    print("Liste Non Vide == True")


